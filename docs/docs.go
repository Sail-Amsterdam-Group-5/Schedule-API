// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/schedule": {
            "get": {
                "description": "Get all Tasks",
                "summary": "Gets all tasks",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.TaskDTO"
                        }
                    }
                }
            }
        },
        "/schedule/group/{groupid}": {
            "get": {
                "description": "Get a list of tasks by  group",
                "summary": "Get the tasks for a group",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Group ID",
                        "name": "groupid",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.TaskDTO"
                        }
                    }
                }
            }
        },
        "/schedule/task": {
            "post": {
                "description": "Create a new task",
                "summary": "Create a new task",
                "parameters": [
                    {
                        "description": "Task",
                        "name": "task",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.Task"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.TaskDTO"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/schedule/task/canceled/{taskId}/{UserId}": {
            "get": {
                "description": "Get a cancel for a task",
                "summary": "Get a cancel for a task",
                "parameters": [
                    {
                        "type": "string",
                        "description": "User ID",
                        "name": "UserId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Task ID",
                        "name": "taskId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "boolean"
                        }
                    }
                }
            }
        },
        "/schedule/task/checkins": {
            "get": {
                "description": "Get all checkins",
                "summary": "Get all checkins",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.CheckInDTO"
                        }
                    }
                }
            }
        },
        "/schedule/task/checkins/{taskId}/{UserId}": {
            "get": {
                "description": "Get a checkin for a task",
                "summary": "Get a checkin for a task",
                "parameters": [
                    {
                        "type": "string",
                        "description": "User ID",
                        "name": "UserId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Task ID",
                        "name": "taskId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "boolean"
                        }
                    }
                }
            }
        },
        "/schedule/task/{id}": {
            "get": {
                "description": "Get a task by ID",
                "summary": "Get a task by ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.TaskDTO"
                        }
                    }
                }
            },
            "put": {
                "description": "Update a task",
                "summary": "Updates a task",
                "parameters": [
                    {
                        "type": "string",
                        "description": "ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Task",
                        "name": "task",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.Task"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.TaskDTO"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete a task",
                "summary": "Deletes a task",
                "parameters": [
                    {
                        "type": "string",
                        "description": "id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/schedule/task/{id}/cancel": {
            "post": {
                "description": "Cancel a task",
                "summary": "Cancel a task",
                "parameters": [
                    {
                        "type": "string",
                        "description": "ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Reason",
                        "name": "reason",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.CancelReason"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.CheckInDTO"
                        }
                    }
                }
            }
        },
        "/schedule/task/{id}/checkin": {
            "post": {
                "description": "CheckIn on a task",
                "summary": "CheckIn on a task",
                "parameters": [
                    {
                        "type": "string",
                        "description": "ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.CheckInDTO"
                        }
                    }
                }
            }
        },
        "/schedule/{date}": {
            "get": {
                "description": "Get a schedule by date",
                "summary": "Get schedule by date",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Date",
                        "name": "date",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.TaskDTO"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "model.CancelReason": {
            "type": "object",
            "properties": {
                "reason": {
                    "description": "Reason for canceling the task.",
                    "type": "string"
                }
            }
        },
        "model.CheckInDTO": {
            "type": "object",
            "properties": {
                "cancelledTask": {
                    "type": "boolean"
                },
                "checkedIn": {
                    "type": "boolean"
                },
                "checkinId": {
                    "type": "string"
                },
                "checkinTime": {
                    "type": "string"
                },
                "primaryKey": {
                    "type": "string"
                },
                "reason": {
                    "type": "string"
                },
                "rowKey": {
                    "type": "string"
                },
                "taskId": {
                    "type": "string"
                },
                "userId": {
                    "type": "string"
                }
            }
        },
        "model.Location": {
            "type": "object",
            "properties": {
                "latitude": {
                    "type": "number"
                },
                "longitude": {
                    "type": "number"
                }
            }
        },
        "model.LocationDTO": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string"
                },
                "icon": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "location": {
                    "$ref": "#/definitions/model.Location"
                },
                "name": {
                    "type": "string"
                },
                "ocean": {
                    "type": "string"
                }
            }
        },
        "model.Task": {
            "type": "object",
            "properties": {
                "date": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "endTime": {
                    "type": "string"
                },
                "groupId": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "location": {
                    "$ref": "#/definitions/model.LocationDTO"
                },
                "name": {
                    "type": "string"
                },
                "startTime": {
                    "type": "string"
                }
            }
        },
        "model.TaskDTO": {
            "type": "object",
            "properties": {
                "date": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "endTime": {
                    "type": "string"
                },
                "groupId": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "location": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "primaryKey": {
                    "type": "string"
                },
                "rowKey": {
                    "type": "string"
                },
                "startTime": {
                    "type": "string"
                }
            }
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "",
	Host:             "",
	BasePath:         "",
	Schemes:          []string{},
	Title:            "",
	Description:      "",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
