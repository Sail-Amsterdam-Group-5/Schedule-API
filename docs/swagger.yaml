definitions:
  model.CheckInDTO:
    properties:
      cancelledTask:
        type: boolean
      checkedIn:
        type: boolean
      checkinId:
        type: string
      checkinTime:
        type: string
      primaryKey:
        type: string
      reason:
        type: string
      rowKey:
        type: string
      taskId:
        type: string
      userId:
        type: string
    type: object
  model.Location:
    properties:
      latitude:
        type: number
      longitude:
        type: number
    type: object
  model.LocationDTO:
    properties:
      created_at:
        type: string
      icon:
        type: string
      id:
        type: string
      location:
        $ref: '#/definitions/model.Location'
      name:
        type: string
      ocean:
        type: string
    type: object
  model.Task:
    properties:
      date:
        type: string
      description:
        type: string
      endTime:
        type: string
      groupId:
        type: string
      id:
        type: string
      location:
        $ref: '#/definitions/model.LocationDTO'
      name:
        type: string
      startTime:
        type: string
    type: object
  model.TaskDTO:
    properties:
      date:
        type: string
      description:
        type: string
      endTime:
        type: string
      groupId:
        type: string
      id:
        type: string
      location:
        type: string
      name:
        type: string
      primaryKey:
        type: string
      rowKey:
        type: string
      startTime:
        type: string
    type: object
info:
  contact: {}
paths:
  /schedule:
    get:
      description: Get all Tasks
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.TaskDTO'
      summary: Gets all tasks
  /schedule/{date}:
    get:
      description: Get a schedule by date
      parameters:
      - description: Date
        in: path
        name: date
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.TaskDTO'
      summary: Get schedule by date
  /schedule/group/{groupid}:
    get:
      description: Get a list of tasks by  group
      parameters:
      - description: Group ID
        in: path
        name: groupid
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.TaskDTO'
      summary: Get the tasks for a group
  /schedule/task:
    post:
      description: Create a new task
      parameters:
      - description: Task
        in: body
        name: task
        required: true
        schema:
          $ref: '#/definitions/model.Task'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.TaskDTO'
        "500":
          description: Internal Server Error
          schema:
            type: string
      summary: Create a new task
  /schedule/task/{id}:
    delete:
      description: Delete a task
      parameters:
      - description: id
        in: path
        name: id
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            type: string
      summary: Deletes a task
    get:
      description: Get a task by ID
      parameters:
      - description: ID
        in: path
        name: id
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.TaskDTO'
      summary: Get a task by ID
    put:
      description: Update a task
      parameters:
      - description: ID
        in: path
        name: id
        required: true
        type: string
      - description: Task
        in: body
        name: task
        required: true
        schema:
          $ref: '#/definitions/model.Task'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.TaskDTO'
      summary: Updates a task
  /schedule/task/{id}/cancel:
    post:
      description: Cancel a task
      parameters:
      - description: ID
        in: path
        name: id
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.CheckInDTO'
      summary: Cancel a task
  /schedule/task/{id}/checkin:
    post:
      description: CheckIn on a task
      parameters:
      - description: ID
        in: path
        name: id
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.CheckInDTO'
      summary: CheckIn on a task
  /schedule/task/checkins:
    get:
      description: Get all checkins
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.CheckInDTO'
      summary: Get all checkins
  /schedule/task/checkins/{taskId}/{UserId}:
    get:
      description: Get a checkin for a task
      parameters:
      - description: User ID
        in: path
        name: UserId
        required: true
        type: string
      - description: Task ID
        in: path
        name: taskId
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            type: boolean
      summary: Get a checkin for a task
swagger: "2.0"
